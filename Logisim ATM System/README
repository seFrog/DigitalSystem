# DigitalSystem
세종대학교 2학년 디지털시스템 프로젝트

---

## 🔐 Logisim 비밀번호 시스템

### 🗂️ 주요 구성요소

- **키패드 입력 (0~9, Setting Password, Enter, Reset)**
- **4-bit 인코더**: 키패드 입력을 4비트 BCD 신호로 변환
- **MOD-3 카운터**: 입력 자리수 추적
- **Input_PIN 레지스터 (4개)**: 입력값 저장
- **Stored_PIN 레지스터 (4개)**: 비밀번호 저장
- **비교기(=) 4개**: 각 자리수 비교
- **AND 게이트**: 전체 자리수 일치 확인
- **TimeOut, StoredPIN_Reset, Reset**: 다양한 리셋 신호
- **Output**: 인증 결과 출력

---

### 📊 회로 블록 다이어그램

(블록 다이어그램은 기존 README 참고)

---

### 🔗 주요 신호 흐름

- **키패드 입력 → 4-bit 인코더 → Input_PIN 레지스터**
- **MOD-3 카운터**: 자리수 순서 제어
- **Enter 버튼**: 입력값 저장 트리거
- **Reset/TimeOut/StoredPIN_Reset**: 레지스터 초기화
- **Input_PIN ↔ Stored_PIN**: 각 자리수 비교 후 AND로 전체 일치 확인

---

### 📝 주요 신호 및 블록 설명

| 블록/신호            | 설명                                              |
|----------------------|--------------------------------------------------|
| Keypad Buttons       | 0~9, Setting Password, Enter, Reset              |
| 4-bit Encoder        | 키패드 입력을 4비트 BCD 신호로 변환               |
| MOD-3 Counter        | 현재 입력중인 자리수(0~3) 추적                    |
| Input_PIN Registers  | 사용자가 입력한 4자리 비밀번호 저장 (각 4비트)    |
| Stored_PIN Registers | 저장된 비밀번호 (각 4비트)                       |
| Comparators (=)      | 입력값과 저장값 자리별 비교 (4개)                 |
| AND Gate             | 4개 비교 결과 모두 1이면 Output=1                 |
| TimeOut              | 시간초과시 리셋 신호                              |
| StoredPIN_Reset      | 저장된 비밀번호 리셋                              |
| Reset                | 전체 시스템 리셋                                  |
| Output               | 인증 성공/실패 결과                               |

---

### ⚡ 동작 순서 요약

1. **비밀번호 설정**: Setting Password, 4자리 입력, Enter
2. **비밀번호 입력**: 4자리 입력, Enter
3. **자리별 비교**: Input_PIN ↔ Stored_PIN (4자리)
4. **모두 일치**: Output=1 (인증 성공)
5. **Reset/Timeout**: 입력값/저장값 초기화

---

## 🏧 ATM 시스템 (Logisim 기반)

### 🗂️ 주요 기능 및 동작

- **4자리 비밀번호 입력**:  
  사용자는 9개의 숫자 키패드로 4자리 비밀번호를 입력합니다.
- **비밀번호 등록/인증**:  
  - 입력 후 Enter 버튼을 누르면 바로 입금/출금 모드로 진입할 수 있습니다.  
  - Setting Password 버튼을 누르면 입력한 비밀번호가 새로운 PIN으로 저장됩니다.
- **타임아웃 기능**:  
  모든 입력 단계는 10초 이내에 완료해야 하며, 시간 초과 시 입력이 초기화됩니다.
- **JK 플립플롭 출력**:  
  비밀번호가 올바르게 입력·저장되면 회로 우측 하단의 JK 플립플롭 출력이 HIGH(1)로 전환되어 인증 완료를 나타냅니다.

---

### 💸 입금/출금 동작

- **입금(Deposit) / 출금(Withdraw) 버튼**:  
  인증이 완료되면, 사용자는 두 버튼 중 하나를 선택할 수 있습니다.  
  각 버튼은 JK 플립플롭과 논리게이트로 연결되어, 누를 때마다 플립플롭 상태가 0 또는 1로 바뀝니다.
- **금액 입력 및 실시간 표시**:  
  9키 키패드로 금액을 입력하면, 상단 7세그먼트 디스플레이에 입력값이 실시간 표시됩니다.
- **Enter 버튼 동작**:  
  - **입금**: 현재 잔액 + 입금액이 8비트(255) 이내인지 비교.  
    조건을 만족하면 가산기(Adder)가 잔액을 갱신하고, 하단 7세그먼트에 새 잔액이 표시됩니다.
  - **출금**: 출금액 ≤ 현재 잔액인지 비교.  
    조건을 만족하면 감산기(Subtractor)가 잔액을 갱신하고, 하단 7세그먼트에 새 잔액이 표시됩니다.

---

### 🛠️ 파일 구성 예시
```
/DigitalSystem
├─ password_system.circ # 비밀번호 시스템 Logisim 회로 파일
├─ atm_system.circ # ATM 기능 Logisim 회로 파일 (비밀번호 시스템 활용)
└─ README.md # 프로젝트 설명 파일 (본 문서)
```

---

## 📢 참고 및 안내

- Logisim으로 구현한 비밀번호 시스템을 ATM 회로의 인증 및 입금/출금 기능에 연계하여 활용하였습니다.
- 각 회로 파일은 Logisim에서 직접 열어 동작을 확인할 수 있습니다.
- 타임아웃, 7세그먼트 표시, JK 플립플롭 등 주요 논리 회로 동작을 반드시 실습해보세요.

---

